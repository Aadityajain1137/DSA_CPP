class Solution {
public:
    bool canFinish(int numCourses, vector<vector<int>>& prerequisites) {
        unordered_map<int,list<int>> adj;
         for (auto &p : prerequisites) {
            int a = p[0];
            int b = p[1];
            adj[b].push_back(a);
        }
        vector<int> indegree(numCourses,0);
        for(auto i : adj){
            for(auto j : i.second){
                indegree[j]++;
            }
        }
        queue<int> q;
        for(int i =0;i<numCourses;i++){
            if(indegree[i]==0){
                q.push(i);
            }
        }
        int cnt =0;
        while(!q.empty()){
            int front = q.front();
            q.pop();
            cnt++;
            for(auto neighbour : adj[front]){
                indegree[neighbour]--;
                if(indegree[neighbour]==0){
                    q.push(neighbour);
                }
            }
        }
        if(cnt == numCourses) return true;
        else return false;
    }
};
