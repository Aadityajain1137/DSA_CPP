class Solution {
public:
    bool isBipartite(vector<vector<int>>& graph) {
        int n = graph.size();
        vector<int> c(n, -1);
        for (int i = 0; i < n; i++) {
            if (c[i] == -1) {
                queue<int> q;
                q.push(i);
                c[i] = 0;
                while (!q.empty()) {
                    int front = q.front();
                    q.pop();
                    for (int nbr : graph[front]) {
                        if (c[nbr] == -1) {
                            c[nbr] = 1 - c[front];
                            q.push(nbr);
                        } else if (c[front] == c[nbr]) {
                            return false;
                        }
                    }
                }
            }
        }
        return true;
    }
};
