class Solution {
public:
    bool dfs(int src, int destination,vector<vector<int>>& edges,vector<int>&visited){
        if(src == destination) return true;
        visited[src]=1;
        for(int &ne : edges[src]){
            if(!visited[ne]){
               if (dfs(ne, destination, edges, visited))
                    return true;
            }
        }
        return false;
    }
    bool validPath(int n, vector<vector<int>>& edges, int source, int destination) {
        vector<vector<int>> adj(n);
        for (auto& e : edges) {
            adj[e[0]].push_back(e[1]);
            adj[e[1]].push_back(e[0]);
        }
        vector<int>visited(n,0);
        return dfs(source, destination, adj, visited);
    }
};
