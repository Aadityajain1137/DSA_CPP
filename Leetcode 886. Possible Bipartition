class Solution {
public:
    bool possibleBipartition(int n, vector<vector<int>>& dislikes) {
        vector<vector<int>> graph(n + 1);
        for (auto& d : dislikes) {
            graph[d[0]].push_back(d[1]);
            graph[d[1]].push_back(d[0]);
        }
        vector<int> color(n+1,-1);
        queue<int>q;
        for(int i =1;i<=n;i++){
            if(color[i]==-1){
                q.push(i);
                color[i]=0;
            }
            while(!q.empty()){
                int front = q.front();
                q.pop();
                for(int &ne : graph[front]){
                    if(color[ne] == -1){
                        color[ne] = 1 - color[front];
                        q.push(ne);
                    }
                    else if(color[ne]==color[front]){
                        return false;
                    }
                }
            }
        }
        return true;
    }
};
